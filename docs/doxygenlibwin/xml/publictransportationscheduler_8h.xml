<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="publictransportationscheduler_8h" kind="file" language="C++">
    <compoundname>publictransportationscheduler.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includedby refid="publictransportationschedulerapp_8h" local="yes">src/publictransportationschedulerapp/header/publictransportationschedulerapp.h</includedby>
    <includedby refid="publictransportationschedulerapp_8cpp" local="yes">src/publictransportationschedulerapp/src/publictransportationschedulerapp.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/publictransportationscheduler/header/publictransportationscheduler.h</label>
        <link refid="publictransportationscheduler_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>src/publictransportationscheduler/header/publictransportationscheduler.h</label>
        <link refid="publictransportationscheduler_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/publictransportationscheduler/src/publictransportationscheduler.cpp</label>
        <link refid="publictransportationscheduler_8cpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/publictransportationschedulerapp/header/publictransportationschedulerapp.h</label>
        <link refid="publictransportationschedulerapp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/publictransportationschedulerapp/src/publictransportationschedulerapp.cpp</label>
        <link refid="publictransportationschedulerapp_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_user" prot="public">User</innerclass>
    <innerclass refid="struct_band" prot="public">Band</innerclass>
    <innerclass refid="struct_schedule_node" prot="public">ScheduleNode</innerclass>
    <innerclass refid="struct_ticket_sale" prot="public">TicketSale</innerclass>
    <innerclass refid="struct_vendor" prot="public">Vendor</innerclass>
    <innerclass refid="struct_sponsor" prot="public">Sponsor</innerclass>
    <innerclass refid="struct_double_node" prot="public">DoubleNode</innerclass>
    <innerclass refid="struct_x_o_r_node" prot="public">XORNode</innerclass>
    <innerclass refid="struct_sparse_matrix_node" prot="public">SparseMatrixNode</innerclass>
    <innerclass refid="struct_node" prot="public">Node</innerclass>
    <innerclass refid="struct_b_plus_tree_node" prot="public">BPlusTreeNode</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="publictransportationscheduler_8h_1a3077ecca3770bdee50e6a17dfb55d002" prot="public" static="no">
        <name>MAX_KEYS</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="88" column="9" bodyfile="src/publictransportationscheduler/header/publictransportationscheduler.h" bodystart="88" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="publictransportationscheduler_8h_1a5a4409323d8989b990203a1485588b50" prot="public" static="no">
        <type>struct ScheduleNode</type>
        <definition>typedef struct ScheduleNode ScheduleNode</definition>
        <argsstring></argsstring>
        <name>ScheduleNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="27" column="14"/>
      </memberdef>
      <memberdef kind="typedef" id="publictransportationscheduler_8h_1a70e40575551e9c43b005898d91e0c92e" prot="public" static="no">
        <type>struct Vendor</type>
        <definition>typedef struct Vendor Vendor</definition>
        <argsstring></argsstring>
        <name>Vendor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="44" column="8"/>
      </memberdef>
      <memberdef kind="typedef" id="publictransportationscheduler_8h_1a4d99f015f0cfba2a07c9bea870623124" prot="public" static="no">
        <type>struct Sponsor</type>
        <definition>typedef struct Sponsor Sponsor</definition>
        <argsstring></argsstring>
        <name>Sponsor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="51" column="9"/>
      </memberdef>
      <memberdef kind="typedef" id="publictransportationscheduler_8h_1a5c7f493d54f217b9c70f5691b5766928" prot="public" static="no">
        <type>struct DoubleNode</type>
        <definition>typedef struct DoubleNode DoubleNode</definition>
        <argsstring></argsstring>
        <name>DoubleNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="65" column="12"/>
      </memberdef>
      <memberdef kind="typedef" id="publictransportationscheduler_8h_1a6ed61e8a951eb9f1086487646a6d9ffc" prot="public" static="no">
        <type>struct XORNode</type>
        <definition>typedef struct XORNode XORNode</definition>
        <argsstring></argsstring>
        <name>XORNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="71" column="9"/>
      </memberdef>
      <memberdef kind="typedef" id="publictransportationscheduler_8h_1a7956cf34a92a7d64e7dc5bfd6182c4aa" prot="public" static="no">
        <type>struct SparseMatrixNode</type>
        <definition>typedef struct SparseMatrixNode SparseMatrixNode</definition>
        <argsstring></argsstring>
        <name>SparseMatrixNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="79" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="publictransportationscheduler_8h_1a3b09f37e675bcd48a01bf22155996872" prot="public" static="no">
        <type>struct Node</type>
        <definition>typedef struct Node Node</definition>
        <argsstring></argsstring>
        <name>Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="85" column="6"/>
      </memberdef>
      <memberdef kind="typedef" id="publictransportationscheduler_8h_1ad5ef8db70631244b205110c4fda1d087" prot="public" static="no">
        <type>struct BPlusTreeNode</type>
        <definition>typedef struct BPlusTreeNode BPlusTreeNode</definition>
        <argsstring></argsstring>
        <name>BPlusTreeNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="97" column="15"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="publictransportationscheduler_8h_1aeee5407776b4bdb0bf6db5bcd7387737" prot="public" static="no" mutable="no">
        <type><ref refid="struct_schedule_node" kindref="compound">ScheduleNode</ref> *</type>
        <definition>ScheduleNode* scheduleHead</definition>
        <argsstring></argsstring>
        <name>scheduleHead</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="29" column="14" bodyfile="src/publictransportationscheduler/header/publictransportationscheduler.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="publictransportationscheduler_8h_1af73a147133c11773d1887e0897af0b79" prot="public" static="no" mutable="no">
        <type><ref refid="struct_vendor" kindref="compound">Vendor</ref> *</type>
        <definition>Vendor* vendorListHead</definition>
        <argsstring></argsstring>
        <name>vendorListHead</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="54" column="8" bodyfile="src/publictransportationscheduler/header/publictransportationscheduler.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="publictransportationscheduler_8h_1a981f0c84e6f00259bc2b7e14ee995b8a" prot="public" static="no" mutable="no">
        <type><ref refid="struct_sponsor" kindref="compound">Sponsor</ref> *</type>
        <definition>Sponsor* sponsorListHead</definition>
        <argsstring></argsstring>
        <name>sponsorListHead</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="55" column="9" bodyfile="src/publictransportationscheduler/header/publictransportationscheduler.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="publictransportationscheduler_8h_1a7e939d63c30c0a3095e349d7a88240ab" prot="public" static="no" mutable="no">
        <type><ref refid="struct_b_plus_tree_node" kindref="compound">BPlusTreeNode</ref> *</type>
        <definition>BPlusTreeNode* root</definition>
        <argsstring></argsstring>
        <name>root</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="99" column="15" bodyfile="src/publictransportationscheduler/header/publictransportationscheduler.h" bodystart="99" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="publictransportationscheduler_8h_1a08256d4367e9d0de8e45fcbd61e04fd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initializeHashTable</definition>
        <argsstring>()</argsstring>
        <name>initializeHashTable</name>
        <briefdescription>
<para>Initializes the hash table. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="102" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="53" bodyend="57" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="102" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1aae50276d118e9723f33a385fc7aeb899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hashFunction</definition>
        <argsstring>(const char *key)</argsstring>
        <name>hashFunction</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Calculates the hash for a given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to hash. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The hash index for the given key. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="103" column="5" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="42" bodyend="48" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="103" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1aa4a39a100849a286c2c4c5e0e28d273e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addUserToHashTable</definition>
        <argsstring>(const char *username, const char *password)</argsstring>
        <name>addUserToHashTable</name>
        <param>
          <type>const char *</type>
          <declname>username</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Adds a user to the hash table. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>The username to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>The password for the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="104" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="64" bodyend="72" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="104" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1ad3299a040b8eebab6b1275eae5821d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verifyUserInHashTable</definition>
        <argsstring>(const char *username, const char *password)</argsstring>
        <name>verifyUserInHashTable</name>
        <param>
          <type>const char *</type>
          <declname>username</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Verifies a user in the hash table. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>The username to verify. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>The password to verify. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the user is found and password matches, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="105" column="5" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="80" bodyend="89" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="105" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1ab289a4be500c44391d41c26dc04573ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void insertDoubleNode</definition>
        <argsstring>(DoubleNode **head, int data)</argsstring>
        <name>insertDoubleNode</name>
        <param>
          <type><ref refid="struct_double_node" kindref="compound">DoubleNode</ref> **</type>
          <declname>head</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Inserts a node into the double linked list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the head of the list. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to insert. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="107" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="120" bodyend="131" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="107" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1ad72c75a43e50e885612cc420ba107b07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void printDoubleList</definition>
        <argsstring>(DoubleNode *head)</argsstring>
        <name>printDoubleList</name>
        <param>
          <type><ref refid="struct_double_node" kindref="compound">DoubleNode</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
<para>Prints a list of all routes by ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head of the route list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="108" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="220" bodyend="232" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="108" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a499c51677d90731938874f947161b61a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_x_o_r_node" kindref="compound">XORNode</ref> *</type>
        <definition>XORNode * XOR</definition>
        <argsstring>(XORNode *a, XORNode *b)</argsstring>
        <name>XOR</name>
        <param>
          <type><ref refid="struct_x_o_r_node" kindref="compound">XORNode</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_x_o_r_node" kindref="compound">XORNode</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Computes the XOR of two pointers for XOR linked list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the first <ref refid="struct_x_o_r_node" kindref="compound">XORNode</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the second <ref refid="struct_x_o_r_node" kindref="compound">XORNode</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XOR of the two pointers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="110" column="9" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="242" bodyend="244" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="110" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a784daf7f98c539cd69746b8b3db1ecea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void insertXORNode</definition>
        <argsstring>(XORNode **head, int data)</argsstring>
        <name>insertXORNode</name>
        <param>
          <type><ref refid="struct_x_o_r_node" kindref="compound">XORNode</ref> **</type>
          <declname>head</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Inserts a new node into the XOR linked list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the head of the XOR linked list. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to store in the new node. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="111" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="251" bodyend="259" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="111" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a3dad1d43a47d9db88b8659a4306bb249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void insertSparseNode</definition>
        <argsstring>(SparseMatrixNode **head, int row, int col, int value)</argsstring>
        <name>insertSparseNode</name>
        <param>
          <type><ref refid="struct_sparse_matrix_node" kindref="compound">SparseMatrixNode</ref> **</type>
          <declname>head</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Inserts a node into a sparse matrix linked list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the head of the sparse matrix linked list. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>Row index of the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>Column index of the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to insert. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="113" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="270" bodyend="277" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="113" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a9235f768e511383f117f41ab92d601f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void push</definition>
        <argsstring>(int data)</argsstring>
        <name>push</name>
        <param>
          <type>int</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Pushes a data element onto the stack. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to push onto the stack. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="115" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="288" bodyend="293" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="115" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a163177f1a0b7d847bc3241809dafc097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pop</definition>
        <argsstring>()</argsstring>
        <name>pop</name>
        <briefdescription>
<para>Pops a data element from the stack. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The popped data from the stack, or -1 if stack is empty. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="116" column="5" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="299" bodyend="307" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="116" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a011d1d2e69488147446e6abf4df9acb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void enqueue</definition>
        <argsstring>(int data)</argsstring>
        <name>enqueue</name>
        <param>
          <type>int</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Enqueues a data element into the queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to enqueue. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="117" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="313" bodyend="323" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="117" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1ad6e0da35e82ee741ee4e9779fdf9e1c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dequeue</definition>
        <argsstring>()</argsstring>
        <name>dequeue</name>
        <briefdescription>
<para>Dequeues a data element from the queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The dequeued data from the queue, or -1 if queue is empty. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="118" column="5" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="329" bodyend="340" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="118" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a3f05f3efe9a5a4aa7daaee5fc4d2ebce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void insertHeap</definition>
        <argsstring>(int data)</argsstring>
        <name>insertHeap</name>
        <param>
          <type>int</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Inserts data into a min-heap. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to insert into the heap. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="120" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="351" bodyend="360" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="120" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a8641221dc62558605a4b4921ec89a3e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int extractMin</definition>
        <argsstring>()</argsstring>
        <name>extractMin</name>
        <briefdescription>
<para>Extracts the minimum element from the min-heap. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The minimum element from the heap, or -1 if heap is empty. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="121" column="5" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="366" bodyend="386" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="121" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a1f9e130c21127e918f9cd652c28960af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bfs</definition>
        <argsstring>(int startNode)</argsstring>
        <name>bfs</name>
        <param>
          <type>int</type>
          <declname>startNode</declname>
        </param>
        <briefdescription>
<para>Performs Breadth-First Search (BFS) starting from a given node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>startNode</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting node for BFS. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="123" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="394" bodyend="405" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="123" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a0d63cfae7795f2aeb269ea111bc0c997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dfs</definition>
        <argsstring>(int startNode)</argsstring>
        <name>dfs</name>
        <param>
          <type>int</type>
          <declname>startNode</declname>
        </param>
        <briefdescription>
<para>Performs Depth-First Search (DFS) starting from a given node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>startNode</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting node for DFS. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="124" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="411" bodyend="422" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a1501a9df250a3e79e2ec3498c7a65499" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void compressDataHuffman</definition>
        <argsstring>(const char *data)</argsstring>
        <name>compressDataHuffman</name>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Compresses the given data using Huffman coding. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to compress. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="126" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="430" bodyend="433" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="126" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a32369377e1d95d2063b21cde84df5866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void decompressDataHuffman</definition>
        <argsstring>()</argsstring>
        <name>decompressDataHuffman</name>
        <briefdescription>
<para>Decompresses data using Huffman coding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="127" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="438" bodyend="441" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="127" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1acb3232bc0e9ef9e48324e06e627676c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KMPSearch</definition>
        <argsstring>(const char *pattern, const char *text)</argsstring>
        <name>KMPSearch</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Searches for a pattern within a text using the KMP algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>The pattern to search for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to search within. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="129" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="450" bodyend="484" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="129" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a7464a341010bc5e28caeda8fbbc74def" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loadUserDatabase</definition>
        <argsstring>()</argsstring>
        <name>loadUserDatabase</name>
        <briefdescription>
<para>Loads the user database from a binary file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="131" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="491" bodyend="500" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="131" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a9c04dff0438032d46ae97d3c76ef88a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void saveUserDatabase</definition>
        <argsstring>()</argsstring>
        <name>saveUserDatabase</name>
        <briefdescription>
<para>Saves the user database to a binary file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="132" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="505" bodyend="511" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a378330dd86baa7420fe4ed0147845c55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int login</definition>
        <argsstring>(const char *username, const char *password)</argsstring>
        <name>login</name>
        <param>
          <type>const char *</type>
          <declname>username</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Authenticates a user by verifying their username and password. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>The username to authenticate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>The password associated with the username. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns 1 if login is successful, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="133" column="5" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="519" bodyend="532" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="133" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a2954b6e11695b7a4b9c9fc2df4ecd21d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void registerUser</definition>
        <argsstring>(const char *username, const char *password)</argsstring>
        <name>registerUser</name>
        <param>
          <type>const char *</type>
          <declname>username</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Registers a new user with a username and password. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>The new user&apos;s username. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>The new user&apos;s password. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="134" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="539" bodyend="561" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="134" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1afcfbe032666cbafc1c70209d8119d996" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loadBandDatabase</definition>
        <argsstring>()</argsstring>
        <name>loadBandDatabase</name>
        <briefdescription>
<para>Loads the band database from a binary file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="136" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="568" bodyend="577" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="136" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a92fd4511b9f726d102b69f09c9ee2e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void saveBandDatabase</definition>
        <argsstring>()</argsstring>
        <name>saveBandDatabase</name>
        <briefdescription>
<para>Saves the band database to a binary file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="137" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="582" bodyend="588" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="137" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a6358fabef3ecd2e6c604fb9c839b7f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addBand</definition>
        <argsstring>(const char *name)</argsstring>
        <name>addBand</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Adds a new band or artist to the band database. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the band or artist to add. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="138" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="594" bodyend="603" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="138" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a60b614018039aa27af5ec0a05f8ff322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void editBand</definition>
        <argsstring>(const char *oldName, const char *newName)</argsstring>
        <name>editBand</name>
        <param>
          <type>const char *</type>
          <declname>oldName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>newName</declname>
        </param>
        <briefdescription>
<para>Edits the name of an existing band or artist. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oldName</parametername>
</parameternamelist>
<parameterdescription>
<para>The current name of the band or artist. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newName</parametername>
</parameternamelist>
<parameterdescription>
<para>The new name for the band or artist. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="139" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="610" bodyend="621" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="139" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1aced0e53ac2e52b903d66fdd4549329a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void viewBands</definition>
        <argsstring>()</argsstring>
        <name>viewBands</name>
        <briefdescription>
<para>Displays the list of all bands and artists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="140" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="626" bodyend="633" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="140" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a6875d46c583ce6dfdc9dc0da41efa85b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loadScheduleDatabase</definition>
        <argsstring>()</argsstring>
        <name>loadScheduleDatabase</name>
        <briefdescription>
<para>Loads schedules from a binary file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="142" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="713" bodyend="735" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="142" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1af254c2b4333b9bac57d59b111834014f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void saveScheduleDatabase</definition>
        <argsstring>()</argsstring>
        <name>saveScheduleDatabase</name>
        <briefdescription>
<para>Saves the schedule database to a binary file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="143" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="762" bodyend="792" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="143" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a9c118366e46568179ae5af5d22abad21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void createSchedule</definition>
        <argsstring>(int scheduleID, const char *bandName, const char *date)</argsstring>
        <name>createSchedule</name>
        <param>
          <type>int</type>
          <declname>scheduleID</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>bandName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Creates a new schedule entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scheduleID</parametername>
</parameternamelist>
<parameterdescription>
<para>The schedule ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bandName</parametername>
</parameternamelist>
<parameterdescription>
<para>The band name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>The scheduled date. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="144" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="743" bodyend="757" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="144" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a54a7f7463b7df104dc158361dd0aef52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void viewSchedules</definition>
        <argsstring>()</argsstring>
        <name>viewSchedules</name>
        <briefdescription>
<para>Views all available schedules. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="145" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="664" bodyend="676" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="145" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a7ca5eb618ca02eba384a217adb2e3e70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loadSalesDatabase</definition>
        <argsstring>()</argsstring>
        <name>loadSalesDatabase</name>
        <briefdescription>
<para>Loads sales data from the binary file and inserts it into the B+ tree. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="147" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="916" bodyend="935" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="147" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1ab0c0ce6b2a8972f6e7f9b3e27090c56a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void saveSalesDatabase</definition>
        <argsstring>()</argsstring>
        <name>saveSalesDatabase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="148" column="6" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="148" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1ae32e1898a3a814a0bb5c26d4fcb68de2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void viewSalesData</definition>
        <argsstring>()</argsstring>
        <name>viewSalesData</name>
        <briefdescription>
<para>Displays all ticket sales data in the B+ tree. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="149" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="940" bodyend="964" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="149" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a52c3863e2808e63bc383d10064016abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void generateSalesReport</definition>
        <argsstring>()</argsstring>
        <name>generateSalesReport</name>
        <briefdescription>
<para>Generates a sales report summarizing ticket sales data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="150" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="994" bodyend="1022" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="150" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a34f0d3361e53b7a66d6d3e4806d7c9a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void insertBPlusNode</definition>
        <argsstring>(int key, TicketSale *sale)</argsstring>
        <name>insertBPlusNode</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="struct_ticket_sale" kindref="compound">TicketSale</ref> *</type>
          <declname>sale</declname>
        </param>
        <briefdescription>
<para>Inserts a new key and ticket sale into the B+ tree. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to insert. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sale</parametername>
</parameternamelist>
<parameterdescription>
<para>The associated ticket sale data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="153" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="848" bodyend="884" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="153" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a436bc8449c6d9e9b7b0b8a04d5c2bb77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void displayBPlusTree</definition>
        <argsstring>(BPlusTreeNode *node)</argsstring>
        <name>displayBPlusTree</name>
        <param>
          <type><ref refid="struct_b_plus_tree_node" kindref="compound">BPlusTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Displays the B+ tree contents. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The root node of the B+ tree. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="154" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="890" bodyend="904" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="154" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a2f41eed3a6bebcb110434e5874c74fba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_ticket_sale" kindref="compound">TicketSale</ref> *</type>
        <definition>TicketSale * searchBPlusTree</definition>
        <argsstring>(int key)</argsstring>
        <name>searchBPlusTree</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Searches the B+ tree for a specific key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to search for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the ticket sale if found, NULL otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="155" column="12" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="819" bodyend="841" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="155" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1acad3ee31c17cb0696e8df858ac13465f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initializeBPlusTree</definition>
        <argsstring>()</argsstring>
        <name>initializeBPlusTree</name>
        <briefdescription>
<para>Initializes the B+ tree. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="156" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="909" bodyend="911" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="156" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a9478ff5b539d7d0ea768b43bb0b2a57b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loadVendorDatabase</definition>
        <argsstring>()</argsstring>
        <name>loadVendorDatabase</name>
        <briefdescription>
<para>Loads the vendor database from a binary file and adds vendors to the list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="158" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="1091" bodyend="1104" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="158" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a0d6885f3029b75ce370431b95b54bf73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void saveVendorDatabase</definition>
        <argsstring>()</argsstring>
        <name>saveVendorDatabase</name>
        <briefdescription>
<para>Saves the vendor database to a binary file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="159" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="1059" bodyend="1070" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="159" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a707153d90df4a85d7b79bb0e2ac84561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void manageVendors</definition>
        <argsstring>()</argsstring>
        <name>manageVendors</name>
        <briefdescription>
<para>Loads and displays the list of all vendors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="160" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="1163" bodyend="1172" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="160" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a05db9accf57963aae5e0da727b8b21d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addSponsorMenu</definition>
        <argsstring>()</argsstring>
        <name>addSponsorMenu</name>
        <briefdescription>
<para>Displays a menu for adding a new sponsor and saves the sponsor data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="161" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="1145" bodyend="1158" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="161" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a22e477b1167ee3a1a1fb74af23c4a4c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addVendorMenu</definition>
        <argsstring>()</argsstring>
        <name>addVendorMenu</name>
        <briefdescription>
<para>Displays a menu for adding a new vendor and saves the vendor data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="162" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="1127" bodyend="1140" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="162" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1afc050fc76e7ac7bca437021f3842254a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loadSponsorDatabase</definition>
        <argsstring>()</argsstring>
        <name>loadSponsorDatabase</name>
        <briefdescription>
<para>Loads the sponsor database from a binary file and adds sponsors to the list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="164" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="1109" bodyend="1122" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="164" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1ab7cac0638d8d265304799360555d9eec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void saveSponsorDatabase</definition>
        <argsstring>()</argsstring>
        <name>saveSponsorDatabase</name>
        <briefdescription>
<para>Saves the sponsor database to a binary file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="165" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="1075" bodyend="1086" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="165" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a47bb57a4772b96184408e7b601c028dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void trackSponsors</definition>
        <argsstring>()</argsstring>
        <name>trackSponsors</name>
        <briefdescription>
<para>Loads and displays the list of all sponsors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="166" column="6" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="1177" bodyend="1186" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="166" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1af243334b827491156582ba5af5ca47d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_double_node" kindref="compound">DoubleNode</ref> *</type>
        <definition>DoubleNode * findDoubleNode</definition>
        <argsstring>(DoubleNode *head, int data)</argsstring>
        <name>findDoubleNode</name>
        <param>
          <type><ref refid="struct_double_node" kindref="compound">DoubleNode</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Finds a route node by route ID in the double linked list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>The head of the list. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The route ID to search for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the node if found, NULL otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="170" column="12" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="139" bodyend="149" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="170" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="publictransportationscheduler_8h_1a15f4f5e94a4ac3685082b8448aaba05d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int deleteDoubleNode</definition>
        <argsstring>(DoubleNode **head, int data)</argsstring>
        <name>deleteDoubleNode</name>
        <param>
          <type><ref refid="struct_double_node" kindref="compound">DoubleNode</ref> **</type>
          <declname>head</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Deletes a node by route ID from the double linked list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>head</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the head of the list. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The route ID to delete. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the node is deleted, 0 if not found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/publictransportationscheduler/header/publictransportationscheduler.h" line="171" column="5" bodyfile="src/publictransportationscheduler/src/publictransportationscheduler.cpp" bodystart="157" bodyend="180" declfile="src/publictransportationscheduler/header/publictransportationscheduler.h" declline="171" declcolumn="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PUBLICTRANSPORTATIONSCHEDULER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PUBLICTRANSPORTATIONSCHEDULER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>B+<sp/>ağacı<sp/>için<sp/>gerekli<sp/>olabilir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>User<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="struct_user" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11" refid="struct_user_1af62c586dc88c8434d35e01db81c0087b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>username[50];</highlight></codeline>
<codeline lineno="12" refid="struct_user_1ae547b53c7ae0dee7ba2fc00bf315fa24" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>password[50];</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}<sp/><ref refid="struct_user" kindref="compound">User</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Band<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="struct_band" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17" refid="struct_band_1a82a3028892cacbb4f61b90237823bc49" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[50];</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}<sp/><ref refid="struct_band" kindref="compound">Band</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Schedule<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="struct_schedule_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_schedule_node" kindref="compound">ScheduleNode</ref><sp/>{</highlight></codeline>
<codeline lineno="22" refid="struct_schedule_node_1a6e532fc45a4a05e79ea39ba6a370f43e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_schedule_node_1a6e532fc45a4a05e79ea39ba6a370f43e" kindref="member">scheduleID</ref>;</highlight></codeline>
<codeline lineno="23" refid="struct_schedule_node_1ae1c0a80f6177207a72d7752d4dd6f111" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_schedule_node_1ae1c0a80f6177207a72d7752d4dd6f111" kindref="member">bandName</ref>[50];</highlight></codeline>
<codeline lineno="24" refid="struct_schedule_node_1ab34965d2efa8e734256641f4730bf598" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_schedule_node_1ab34965d2efa8e734256641f4730bf598" kindref="member">date</ref>[20];</highlight></codeline>
<codeline lineno="25" refid="struct_schedule_node_1aad56d1759a9eab88b3b3973851f59259" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_schedule_node" kindref="compound">ScheduleNode</ref><sp/>*<ref refid="struct_schedule_node_1aad56d1759a9eab88b3b3973851f59259" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="26" refid="struct_schedule_node_1af15a1f81bcfea7395104937d412bc4e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_schedule_node" kindref="compound">ScheduleNode</ref><sp/>*<ref refid="struct_schedule_node_1af15a1f81bcfea7395104937d412bc4e6" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="27" refid="publictransportationscheduler_8h_1a5a4409323d8989b990203a1485588b50" refkind="member"><highlight class="normal">}<sp/><ref refid="publictransportationscheduler_8h_1a5a4409323d8989b990203a1485588b50" kindref="member">ScheduleNode</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="publictransportationscheduler_8h_1aeee5407776b4bdb0bf6db5bcd7387737" refkind="member"><highlight class="normal"><ref refid="struct_schedule_node" kindref="compound">ScheduleNode</ref><sp/>*<ref refid="publictransportationscheduler_8h_1aeee5407776b4bdb0bf6db5bcd7387737" kindref="member">scheduleHead</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ticket<sp/>Sale<sp/>structure<sp/>(Tek<sp/>tanımlama)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="struct_ticket_sale" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33" refid="struct_ticket_sale_1ac9bb877a021b41e5387b511063ebd45e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_ticket_sale_1ac9bb877a021b41e5387b511063ebd45e" kindref="member">saleID</ref>;</highlight></codeline>
<codeline lineno="34" refid="struct_ticket_sale_1ab9de4a1e9f1c4fadd300d86148ac6894" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ticketType[20];</highlight></codeline>
<codeline lineno="35" refid="struct_ticket_sale_1aba94134a07d017f0c5e22bd6fb712c0d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_ticket_sale_1aba94134a07d017f0c5e22bd6fb712c0d" kindref="member">amount</ref>;</highlight></codeline>
<codeline lineno="36" refid="struct_ticket_sale_1afa8729907fb1575e81a8d61873b8c3ba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_schedule_node_1ab34965d2efa8e734256641f4730bf598" kindref="member">date</ref>[20];</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/><ref refid="struct_ticket_sale" kindref="compound">TicketSale</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="struct_vendor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_vendor" kindref="compound">Vendor</ref><sp/>{</highlight></codeline>
<codeline lineno="40" refid="struct_vendor_1a429ffb2ff9afc4df184d5028302ded3d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_vendor_1a429ffb2ff9afc4df184d5028302ded3d" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="41" refid="struct_vendor_1a0e7d6abb02e20258baf69d63666d1793" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_vendor_1a0e7d6abb02e20258baf69d63666d1793" kindref="member">name</ref>[50];</highlight></codeline>
<codeline lineno="42" refid="struct_vendor_1a072cfa231994ea8f28b2b1f189001596" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_vendor_1a072cfa231994ea8f28b2b1f189001596" kindref="member">serviceType</ref>[50];</highlight></codeline>
<codeline lineno="43" refid="struct_vendor_1af23998ef753c4ab0b2d8f4d781bf1540" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_vendor" kindref="compound">Vendor</ref><sp/>*<ref refid="struct_vendor_1af23998ef753c4ab0b2d8f4d781bf1540" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="44" refid="publictransportationscheduler_8h_1a70e40575551e9c43b005898d91e0c92e" refkind="member"><highlight class="normal">}<sp/><ref refid="publictransportationscheduler_8h_1a70e40575551e9c43b005898d91e0c92e" kindref="member">Vendor</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="struct_sponsor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sponsor" kindref="compound">Sponsor</ref><sp/>{</highlight></codeline>
<codeline lineno="47" refid="struct_sponsor_1ac52845ad9e257d80766134c258a4892a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_sponsor_1ac52845ad9e257d80766134c258a4892a" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="48" refid="struct_sponsor_1a41b238af3834b43678fa3891d1745cc9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_sponsor_1a41b238af3834b43678fa3891d1745cc9" kindref="member">name</ref>[50];</highlight></codeline>
<codeline lineno="49" refid="struct_sponsor_1a0126d50906bf99303d498d09f881fe4e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_sponsor_1a0126d50906bf99303d498d09f881fe4e" kindref="member">contributionAmount</ref>;</highlight></codeline>
<codeline lineno="50" refid="struct_sponsor_1a46bf285b954e9fd93128296fc2b7067b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sponsor" kindref="compound">Sponsor</ref><sp/>*<ref refid="struct_sponsor_1a46bf285b954e9fd93128296fc2b7067b" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="51" refid="publictransportationscheduler_8h_1a4d99f015f0cfba2a07c9bea870623124" refkind="member"><highlight class="normal">}<sp/><ref refid="publictransportationscheduler_8h_1a4d99f015f0cfba2a07c9bea870623124" kindref="member">Sponsor</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Global<sp/>vendor<sp/>ve<sp/>sponsor<sp/>listeleri</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="publictransportationscheduler_8h_1af73a147133c11773d1887e0897af0b79" refkind="member"><highlight class="normal"><ref refid="struct_vendor" kindref="compound">Vendor</ref><sp/>*<ref refid="publictransportationscheduler_8h_1af73a147133c11773d1887e0897af0b79" kindref="member">vendorListHead</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="55" refid="publictransportationscheduler_8h_1a981f0c84e6f00259bc2b7e14ee995b8a" refkind="member"><highlight class="normal"><ref refid="struct_sponsor" kindref="compound">Sponsor</ref><sp/>*<ref refid="publictransportationscheduler_8h_1a981f0c84e6f00259bc2b7e14ee995b8a" kindref="member">sponsorListHead</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Double<sp/>Linked<sp/>List<sp/>Node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="struct_double_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_double_node" kindref="compound">DoubleNode</ref><sp/>{</highlight></codeline>
<codeline lineno="59" refid="struct_double_node_1ace4d84500ef6d0dc3dcf88f0d12e002c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_double_node_1ace4d84500ef6d0dc3dcf88f0d12e002c" kindref="member">data</ref>;<sp/></highlight><highlight class="comment">//<sp/>Route<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="struct_double_node_1a9cf812c3258fd9670f7bafd856ab9cf4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_double_node_1a9cf812c3258fd9670f7bafd856ab9cf4" kindref="member">routeName</ref>[50];<sp/></highlight><highlight class="comment">//<sp/>Route<sp/>Name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="struct_double_node_1aeb28d101b1871961c75fa86a0145320a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_double_node_1aeb28d101b1871961c75fa86a0145320a" kindref="member">startPoint</ref>[50];<sp/></highlight><highlight class="comment">//<sp/>Starting<sp/>Point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="struct_double_node_1a86d86f690c62d74749076efb1d0542e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_double_node_1a86d86f690c62d74749076efb1d0542e9" kindref="member">endPoint</ref>[50];<sp/></highlight><highlight class="comment">//<sp/>Ending<sp/>Point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="struct_double_node_1a5eb6461fb0145cc9247d8bf9d02e8089" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_double_node" kindref="compound">DoubleNode</ref><sp/>*<ref refid="struct_double_node_1a5eb6461fb0145cc9247d8bf9d02e8089" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="64" refid="struct_double_node_1abb9ca166e5960d5def98c7014a572397" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_double_node" kindref="compound">DoubleNode</ref><sp/>*<ref refid="struct_double_node_1abb9ca166e5960d5def98c7014a572397" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="65" refid="publictransportationscheduler_8h_1a5c7f493d54f217b9c70f5691b5766928" refkind="member"><highlight class="normal">}<sp/><ref refid="publictransportationscheduler_8h_1a5c7f493d54f217b9c70f5691b5766928" kindref="member">DoubleNode</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>XOR<sp/>Linked<sp/>List<sp/>Node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="struct_x_o_r_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_x_o_r_node" kindref="compound">XORNode</ref><sp/>{</highlight></codeline>
<codeline lineno="69" refid="struct_x_o_r_node_1ace398d63223a5a3d25bb625f4bf106e2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_x_o_r_node_1ace398d63223a5a3d25bb625f4bf106e2" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="70" refid="struct_x_o_r_node_1a90966e7d31bcd0c59dddb1788db21389" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_x_o_r_node" kindref="compound">XORNode</ref><sp/>*<ref refid="struct_x_o_r_node_1a90966e7d31bcd0c59dddb1788db21389" kindref="member">npx</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>XOR<sp/>of<sp/>next<sp/>and<sp/>previous<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="publictransportationscheduler_8h_1a6ed61e8a951eb9f1086487646a6d9ffc" refkind="member"><highlight class="normal">}<sp/><ref refid="publictransportationscheduler_8h_1a6ed61e8a951eb9f1086487646a6d9ffc" kindref="member">XORNode</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sparse<sp/>Matrix<sp/>Node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="struct_sparse_matrix_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sparse_matrix_node" kindref="compound">SparseMatrixNode</ref><sp/>{</highlight></codeline>
<codeline lineno="75" refid="struct_sparse_matrix_node_1a8ce2dd51e0bbd9c85a7321a8f27cd41a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_sparse_matrix_node_1a8ce2dd51e0bbd9c85a7321a8f27cd41a" kindref="member">row</ref>;</highlight></codeline>
<codeline lineno="76" refid="struct_sparse_matrix_node_1aa07ce50534b765e8bbba0ea5063acb67" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_sparse_matrix_node_1aa07ce50534b765e8bbba0ea5063acb67" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="77" refid="struct_sparse_matrix_node_1a641c08437403335c5a32408ef2c7099e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_sparse_matrix_node_1a641c08437403335c5a32408ef2c7099e" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="78" refid="struct_sparse_matrix_node_1a02643a9df51e133bbb4f8ddcc02fd04a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sparse_matrix_node" kindref="compound">SparseMatrixNode</ref><sp/>*<ref refid="struct_sparse_matrix_node_1a02643a9df51e133bbb4f8ddcc02fd04a" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="79" refid="publictransportationscheduler_8h_1a7956cf34a92a7d64e7dc5bfd6182c4aa" refkind="member"><highlight class="normal">}<sp/><ref refid="publictransportationscheduler_8h_1a7956cf34a92a7d64e7dc5bfd6182c4aa" kindref="member">SparseMatrixNode</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stack<sp/>and<sp/>Queue<sp/>Node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="struct_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_node" kindref="compound">Node</ref><sp/>{</highlight></codeline>
<codeline lineno="83" refid="struct_node_1a87c003c9f600e3fc58e6e90835f0b605" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_node_1a87c003c9f600e3fc58e6e90835f0b605" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="84" refid="struct_node_1af67b110ca1a258b793bf69d306929b22" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_node" kindref="compound">Node</ref><sp/>*<ref refid="struct_node_1af67b110ca1a258b793bf69d306929b22" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="85" refid="publictransportationscheduler_8h_1a3b09f37e675bcd48a01bf22155996872" refkind="member"><highlight class="normal">}<sp/><ref refid="publictransportationscheduler_8h_1a3b09f37e675bcd48a01bf22155996872" kindref="member">Node</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>B+<sp/>Ağacı<sp/>düğüm<sp/>yapısı</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="publictransportationscheduler_8h_1a3077ecca3770bdee50e6a17dfb55d002" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_KEYS<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="struct_b_plus_tree_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_b_plus_tree_node" kindref="compound">BPlusTreeNode</ref><sp/>{</highlight></codeline>
<codeline lineno="91" refid="struct_b_plus_tree_node_1a7f8f020ee553bc8b3c4f3432642c45cb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_b_plus_tree_node_1a7f8f020ee553bc8b3c4f3432642c45cb" kindref="member">keys</ref>[<ref refid="publictransportationscheduler_8h_1a3077ecca3770bdee50e6a17dfb55d002" kindref="member">MAX_KEYS</ref>];</highlight></codeline>
<codeline lineno="92" refid="struct_b_plus_tree_node_1a5b910ba3c17ed47131dbe27806af93d1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_ticket_sale" kindref="compound">TicketSale</ref><sp/>*<ref refid="struct_b_plus_tree_node_1a5b910ba3c17ed47131dbe27806af93d1" kindref="member">sales</ref>[<ref refid="publictransportationscheduler_8h_1a3077ecca3770bdee50e6a17dfb55d002" kindref="member">MAX_KEYS</ref>];</highlight></codeline>
<codeline lineno="93" refid="struct_b_plus_tree_node_1acd77908e459e0dba6d2f78068d1620f9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_b_plus_tree_node" kindref="compound">BPlusTreeNode</ref><sp/>*<ref refid="struct_b_plus_tree_node_1acd77908e459e0dba6d2f78068d1620f9" kindref="member">children</ref>[<ref refid="publictransportationscheduler_8h_1a3077ecca3770bdee50e6a17dfb55d002" kindref="member">MAX_KEYS</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="94" refid="struct_b_plus_tree_node_1a7b81dce4b1107ca7e94fa0a3c623e56f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_b_plus_tree_node_1a7b81dce4b1107ca7e94fa0a3c623e56f" kindref="member">numKeys</ref>;</highlight></codeline>
<codeline lineno="95" refid="struct_b_plus_tree_node_1a35ca3a83ab062bf9687a0d37607e3f17" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_b_plus_tree_node_1a35ca3a83ab062bf9687a0d37607e3f17" kindref="member">isLeaf</ref>;</highlight></codeline>
<codeline lineno="96" refid="struct_b_plus_tree_node_1a2a31f32577529ef0a66102a1d77001ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_b_plus_tree_node" kindref="compound">BPlusTreeNode</ref><sp/>*<ref refid="struct_b_plus_tree_node_1a2a31f32577529ef0a66102a1d77001ab" kindref="member">next</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Yaprak<sp/>düğümler<sp/>için<sp/>bağlantı</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="publictransportationscheduler_8h_1ad5ef8db70631244b205110c4fda1d087" refkind="member"><highlight class="normal">}<sp/><ref refid="publictransportationscheduler_8h_1ad5ef8db70631244b205110c4fda1d087" kindref="member">BPlusTreeNode</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="publictransportationscheduler_8h_1a7e939d63c30c0a3095e349d7a88240ab" refkind="member"><highlight class="normal"><ref refid="struct_b_plus_tree_node" kindref="compound">BPlusTreeNode</ref><sp/>*<ref refid="publictransportationscheduler_8h_1a7e939d63c30c0a3095e349d7a88240ab" kindref="member">root</ref><sp/>=<sp/>NULL;<sp/><sp/></highlight><highlight class="comment">//<sp/>B+<sp/>Ağacının<sp/>kök<sp/>düğümü</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>prototypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a08256d4367e9d0de8e45fcbd61e04fd9" kindref="member">initializeHashTable</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1aae50276d118e9723f33a385fc7aeb899" kindref="member">hashFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1aa4a39a100849a286c2c4c5e0e28d273e" kindref="member">addUserToHashTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*username,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*password);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1ad3299a040b8eebab6b1275eae5821d8c" kindref="member">verifyUserInHashTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*username,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*password);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1ab289a4be500c44391d41c26dc04573ec" kindref="member">insertDoubleNode</ref>(<ref refid="struct_double_node" kindref="compound">DoubleNode</ref><sp/>**head,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1ad72c75a43e50e885612cc420ba107b07" kindref="member">printDoubleList</ref>(<ref refid="struct_double_node" kindref="compound">DoubleNode</ref><sp/>*head);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="struct_x_o_r_node" kindref="compound">XORNode</ref><sp/>*<ref refid="publictransportationscheduler_8h_1a499c51677d90731938874f947161b61a" kindref="member">XOR</ref>(<ref refid="struct_x_o_r_node" kindref="compound">XORNode</ref><sp/>*a,<sp/><ref refid="struct_x_o_r_node" kindref="compound">XORNode</ref><sp/>*b);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a784daf7f98c539cd69746b8b3db1ecea" kindref="member">insertXORNode</ref>(<ref refid="struct_x_o_r_node" kindref="compound">XORNode</ref><sp/>**head,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a3dad1d43a47d9db88b8659a4306bb249" kindref="member">insertSparseNode</ref>(<ref refid="struct_sparse_matrix_node" kindref="compound">SparseMatrixNode</ref><sp/>**head,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a9235f768e511383f117f41ab92d601f6" kindref="member">push</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a163177f1a0b7d847bc3241809dafc097" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a011d1d2e69488147446e6abf4df9acb4" kindref="member">enqueue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1ad6e0da35e82ee741ee4e9779fdf9e1c9" kindref="member">dequeue</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a3f05f3efe9a5a4aa7daaee5fc4d2ebce" kindref="member">insertHeap</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a8641221dc62558605a4b4921ec89a3e6" kindref="member">extractMin</ref>();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a1f9e130c21127e918f9cd652c28960af" kindref="member">bfs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startNode);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a0d63cfae7795f2aeb269ea111bc0c997" kindref="member">dfs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startNode);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a1501a9df250a3e79e2ec3498c7a65499" kindref="member">compressDataHuffman</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a32369377e1d95d2063b21cde84df5866" kindref="member">decompressDataHuffman</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1acb3232bc0e9ef9e48324e06e627676c0" kindref="member">KMPSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pattern,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a7464a341010bc5e28caeda8fbbc74def" kindref="member">loadUserDatabase</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a9c04dff0438032d46ae97d3c76ef88a4" kindref="member">saveUserDatabase</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a378330dd86baa7420fe4ed0147845c55" kindref="member">login</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*username,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*password);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a2954b6e11695b7a4b9c9fc2df4ecd21d" kindref="member">registerUser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*username,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*password);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1afcfbe032666cbafc1c70209d8119d996" kindref="member">loadBandDatabase</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a92fd4511b9f726d102b69f09c9ee2e2a" kindref="member">saveBandDatabase</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a6358fabef3ecd2e6c604fb9c839b7f84" kindref="member">addBand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a60b614018039aa27af5ec0a05f8ff322" kindref="member">editBand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*oldName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*newName);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1aced0e53ac2e52b903d66fdd4549329a9" kindref="member">viewBands</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a6875d46c583ce6dfdc9dc0da41efa85b" kindref="member">loadScheduleDatabase</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1af254c2b4333b9bac57d59b111834014f" kindref="member">saveScheduleDatabase</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a9c118366e46568179ae5af5d22abad21" kindref="member">createSchedule</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scheduleID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bandName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*date);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a54a7f7463b7df104dc158361dd0aef52" kindref="member">viewSchedules</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a7ca5eb618ca02eba384a217adb2e3e70" kindref="member">loadSalesDatabase</ref>();</highlight></codeline>
<codeline lineno="148" refid="publictransportationscheduler_8h_1ab0c0ce6b2a8972f6e7f9b3e27090c56a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1ab0c0ce6b2a8972f6e7f9b3e27090c56a" kindref="member">saveSalesDatabase</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1ae32e1898a3a814a0bb5c26d4fcb68de2" kindref="member">viewSalesData</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a52c3863e2808e63bc383d10064016abe" kindref="member">generateSalesReport</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>B+<sp/>ağacı<sp/>fonksiyon<sp/>prototipleri</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a34f0d3361e53b7a66d6d3e4806d7c9a8" kindref="member">insertBPlusNode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/><ref refid="struct_ticket_sale" kindref="compound">TicketSale</ref><sp/>*sale);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a436bc8449c6d9e9b7b0b8a04d5c2bb77" kindref="member">displayBPlusTree</ref>(<ref refid="struct_b_plus_tree_node" kindref="compound">BPlusTreeNode</ref><sp/>*node);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><ref refid="struct_ticket_sale" kindref="compound">TicketSale</ref><sp/>*<ref refid="publictransportationscheduler_8h_1a2f41eed3a6bebcb110434e5874c74fba" kindref="member">searchBPlusTree</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1acad3ee31c17cb0696e8df858ac13465f" kindref="member">initializeBPlusTree</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a9478ff5b539d7d0ea768b43bb0b2a57b" kindref="member">loadVendorDatabase</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a0d6885f3029b75ce370431b95b54bf73" kindref="member">saveVendorDatabase</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a707153d90df4a85d7b79bb0e2ac84561" kindref="member">manageVendors</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a05db9accf57963aae5e0da727b8b21d7" kindref="member">addSponsorMenu</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a22e477b1167ee3a1a1fb74af23c4a4c1" kindref="member">addVendorMenu</ref>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1afc050fc76e7ac7bca437021f3842254a" kindref="member">loadSponsorDatabase</ref>();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1ab7cac0638d8d265304799360555d9eec" kindref="member">saveSponsorDatabase</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a47bb57a4772b96184408e7b601c028dc" kindref="member">trackSponsors</ref>();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Double<sp/>Linked<sp/>List<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1ab289a4be500c44391d41c26dc04573ec" kindref="member">insertDoubleNode</ref>(<ref refid="struct_double_node" kindref="compound">DoubleNode</ref><sp/>**head,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><ref refid="struct_double_node" kindref="compound">DoubleNode</ref><sp/>*<ref refid="publictransportationscheduler_8h_1af243334b827491156582ba5af5ca47d3" kindref="member">findDoubleNode</ref>(<ref refid="struct_double_node" kindref="compound">DoubleNode</ref><sp/>*head,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1a15f4f5e94a4ac3685082b8448aaba05d" kindref="member">deleteDoubleNode</ref>(<ref refid="struct_double_node" kindref="compound">DoubleNode</ref><sp/>**head,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="publictransportationscheduler_8h_1ad72c75a43e50e885612cc420ba107b07" kindref="member">printDoubleList</ref>(<ref refid="struct_double_node" kindref="compound">DoubleNode</ref><sp/>*head);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>PUBLICTRANSPORTATIONSCHEDULER_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/publictransportationscheduler/header/publictransportationscheduler.h"/>
  </compounddef>
</doxygen>
